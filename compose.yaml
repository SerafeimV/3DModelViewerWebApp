services:
  backend:
    build: ./backend/
    container_name: model-viewer-backend
    ports:
      - ${BACKEND_HOST_PORT}:${BACKEND_CONTAINER_PORT}
    depends_on:
      - db
    environment:
      #springboot
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      #jpa
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA: modelviewerschema
      #flyway
      SPRING_FLYWAY_ENABLED: true
      SPRING_FLYWAY_LOCATIONS: classpath:db/migration
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: true
      SPRING_FLYWAY_SCHEMAS: modelviewerschema
      SPRING_FLYWAY_CREATE_SCHEMAS: true
      #storage
      STORAGE_MODE: local
      STORAGE_PATH: /app/storage
      #server
      SERVER_ADDRESS: ${SERVER_ADDRESS}
      SERVER_PORT: ${SERVER_PORT}
      #jwt
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      #file size
      SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: 100MB
      SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE: 100MB
    volumes:
      - ./storage:/app/storage

  frontend:
    build: ./frontend/
    container_name: model-viewer-frontend
    ports:
      - ${FRONTEND_HOST_PORT}:${FRONTEND_CONTAINER_PORT}
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL}

  db:
    image: postgres:17
    container_name: model-viewer-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
